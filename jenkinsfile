pipeline {
    agent {
        node {
            label 'app_node'
        }
    }

    environment {
        ROOT_PASSWORD_ID = 'root_password_id'
        USER_PASSWORD_ID = 'user_password_id'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/wincchesster/actions-build-tests.git']]])
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: env.ROOT_PASSWORD_ID, variable: 'DB_ROOT_PASSWORD'),
                        string(credentialsId: env.USER_PASSWORD_ID, variable: 'DB_USER_PASSWORD')
                    ]) {
                        sh 'docker-compose up -d mysql'
                        sh 'docker-compose up  python_testing_app'
                        sh 'docker stop python_testing_container'
                        
                        
                    }
                }
            }
        }

        stage('Create coverage report') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: env.ROOT_PASSWORD_ID, variable: 'DB_ROOT_PASSWORD'),
                        string(credentialsId: env.USER_PASSWORD_ID, variable: 'DB_USER_PASSWORD')
                    ]) {
                          sh 'docker-compose up -d mysql'
                          sh 'docker-compose up  app-coverage'
                          sleep time: 3, unit: 'SECONDS'
                          sh 'docker cp app-coverage:/app/coverage/ .'
                          sh 'docker stop mysql-server'
                    }
                }
            }
        }

        stage('Publish coverage report') {
            steps {
                publishHTML target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'coverage',
                    reportFiles: 'index.html',
                    reportName: 'Coverage Reports',
                    reportTitles: 'The Report'
                ]
            }
        }
    }
}

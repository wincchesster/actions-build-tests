name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

    # if you want to use the this function you need change IMAGE_NAME to REPO in next step .    
    #   - name: downcase REPO name
    #     run: |
    #         echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag_version.outputs.new_tag }}, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Build image with tests
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile_tests
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:tests
      
      - name: Run tests
        id: run_tests
        run: |
          docker compose up -d mysql
          docker compose up --exit-code-from python_testing_app python_testing_app
          
      - name: Push image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag_version.outputs.new_tag }}, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Test coverage
        run: |
          mkdir coverage
          docker compose up -d mysql
          docker compose up app-coverage
          rm -rf coverage/.gitignore


      - name: Push coverage
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Oleksander Chaikovskyi
          author_email: wincchesster@gmail.com
          message: 'Add code coverage report'
          add: 'coverage'
          new_branch: gh-pages 
          push: true
        

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage/index.html

  


